# Description:
# Run Playwright E2E tests for the plugin.
# The plugin must be built via the "ci" workflow and available as a GitHub artifact before running this workflow.

name: Plugins - Playwright E2E tests

on:
  workflow_call:
    inputs:
      id:
        description: Plugin ID
        type: string
        required: true
      version:
        description: Plugin version
        type: string
        required: true
      # https://github.com/grafana/plugin-actions/blob/main/e2e-version/action.yml
      skip-grafana-dev-image:
        default: false
        required: false
        type: boolean
      version-resolver-type:
        required: false
        type: string
        default: plugin-grafana-dependency
      grafana-dependency:
        required: false
        type: string
      upload-artifacts:
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  resolve-versions:
    name: Resolve Grafana images
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      matrix: ${{ steps.resolve-versions.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Resolve Grafana E2E versions
        id: resolve-versions
        uses: grafana/plugin-actions/e2e-version@main
        with:
          skip-grafana-dev-image: ${{ inputs.skip-grafana-dev-image }}
          version-resolver-type: ${{ inputs.version-resolver-type }}
          grafana-dependency: ${{ inputs.grafana-dependency }}

  playwright-tests:
    needs: resolve-versions
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        GRAFANA_IMAGE: ${{fromJson(needs.resolve-versions.outputs.matrix)}}
    name: e2e ${{ matrix.GRAFANA_IMAGE.name }}@${{ matrix.GRAFANA_IMAGE.VERSION }}
    runs-on: ubuntu-latest-8-cores
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc

      - name: Install npm dependencies
        # TODO: find a better way
        run: |
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi
        shell: bash

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Download GitHub artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: dist-artifacts
          path: /tmp/dist-artifacts

      - name: Move dist artifacts
        run: |
          mkdir -p dist
          src=$(pwd)

          cd /tmp/dist-artifacts
          # unzip the universal zip
          unzip ${{ inputs.id }}-${{ inputs.version }}.zip -d out
          # Folder structure: /tmp/dist-artifacts/out/$PLUGIN_ID/plugin.json
          cd out
          cd "$(ls -1)"
          mv ./* "$src/dist/"

      - name: Start Grafana
        run: |
          docker compose pull
          GRAFANA_VERSION=${{ matrix.GRAFANA_IMAGE.VERSION }} GRAFANA_IMAGE=${{ matrix.GRAFANA_IMAGE.NAME }} docker compose up -d

      - name: Wait for Grafana to start
        uses: grafana/plugin-actions/wait-for-grafana@main

      - name: Run Playwright tests
        id: run-tests
        run: npx playwright test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.0
        if: ${{ (inputs.upload-artifacts == true) && ((always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure')) }}
        with:
          name: playwright-report-${{ matrix.GRAFANA_IMAGE.NAME }}-v${{ matrix.GRAFANA_IMAGE.VERSION }}-${{github.run_id}}
          path: playwright-report/
          retention-days: 30
