name: Bump npm version and release
description: |
  Bump npm version, create a git tag and optionally generate a changelog on main.

inputs:
  version:
    description: "Semver type of new version (major / minor / patch)"
    required: true
    type: choice
    options:
      - patch
      - minor
      - major
  generate-changelog:
    description: "Generate changelog"
    required: false
    type: boolean
    default: true

runs:
  using: composite
  steps:
    - name: Get secrets
      id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@28361cdb22223e5f1e34358c86c20908e7248760 # get-vault-secrets-v1.1.0
      with:
        repo_secrets: |
            GITHUB_APP_ID=plugins-platform-bot-app:app_id
            GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:app_pem

    - name: Generate token
      id: generate_token
      uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
      with:
        app-id: ${{ env.GITHUB_APP_ID }}
        private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        token: ${{ steps.generate_token.outputs.token }}
        persist-credentials: true

    - name: Setup Git
      run: |
        git config user.name 'grafana-plugins-platform-bot[bot]'
        git config user.email '144369747+grafana-plugins-platform-bot[bot]@users.noreply.github.com'

    - name: Get latest tag before bumping
      id: latest_tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump
      run: |
        NEW_VERSION=$(npm version ${INPUT_VERSION} --no-git-tag-version)
        echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
      env:
        INPUT_VERSION: ${{ github.event.inputs.version }}
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
    
    - name: Create git tag
      run: git tag v${{ steps.bump.outputs.new_version }}
      
    - name: Generate changelog
      if: ${{ inputs.generate-changelog == 'true' }}
      run: |
        npm install -g generate-changelog
        generate-changelog -t ${{ steps.latest_tag.outputs.latest_tag }}...v${{ steps.bump.outputs.new_version }} -i CHANGELOG.md
        sed -i -E 's/(## [0-9]+\.[0-9]+\.[0-9]+)( \(([0-9]{4}-[0-9]{2}-[0-9]{2}|[Uu]nreleased)\))?/\1/' CHANGELOG.md
        sed '/^# Changelog$/d' CHANGELOG.md | (printf "# Changelog\n\n"; cat -) > temp && mv temp CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

    - name: Commit changes
      run: git add package.json && git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}" && git push
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

    - name: Push latest version
      run: git push origin main

    - name: Push tags
      run: git push origin --tags