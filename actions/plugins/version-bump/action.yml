name: Bump npm version and release
description: |
  Bump npm version, create a git tag and optionally generate a changelog on main.

inputs:
  version:
    description: "Semver type of new version (major / minor / patch)"
    required: true
    type: choice
    options:
      - patch
      - minor
      - major
  generate-changelog:
    description: "Generate changelog"
    required: false
    type: boolean
    default: true

env:
  VAULT_INSTANCE: ops

runs:
  using: composite
  steps:
    - name: Get secrets from Vault
      id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@main # zizmor: ignore[unpinned-uses]
      with:
        vault_instance: ops 
        common_secrets: |
          GITHUB_APP_ID=plugins-platform-bot-app:app-id
          GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:private-key

    - name: Generate GitHub token
      id: generate-github-token
      uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
      with:
        app-id: ${{ env.GITHUB_APP_ID }}
        private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        token: ${{ steps.generate-github-token.outputs.token }}
        persist-credentials: true

    - name: Setup Git
      shell: bash
      run: |
        git config user.name 'grafana-plugins-platform-bot[bot]'
        git config user.email '144369747+grafana-plugins-platform-bot[bot]@users.noreply.github.com'

    - name: Get previous tag before bumping
      id: previous-tag
      shell: bash
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "previous-tag=${PREVIOUS_TAG}" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump
      shell: bash
      run: |
        NEW_VERSION=$(npm version ${INPUT_VERSION})
        echo "new-version=${NEW_VERSION}" >> $GITHUB_OUTPUT
      env:
        INPUT_VERSION: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ steps.generate-github-token.outputs.token }
    
    - name: Generate Changelog
      id: github-changelog-generator
     if: ${{ inputs.generate-changelog == 'true' }} 
      uses: janheinrichmerker/action-github-changelog-generator@e60b5a2bd9fcd88dadf6345ff8327863fb8b490f # v2.4
      with:
        token: ${{ steps.generate-github-token.outputs.token }}
        output: CHANGELOG.md
        user: ${{ github.repository_owner }}
        project: ${{ github.event.repository.name }}
        unreleased: true
        issues: true
        pullRequests: true
        includeLabels: "chore,bug,enhancement,feature"
        simpleList: true
    
        - name: Read changelog
      id: changelog
      run: |
        awk '/^## / {s++} s == 1 {print}' CHANGELOG.md > release_notes.md
        echo "path=release_notes.md" >> $GITHUB_OUTPUT
      shell: bash

    - name: Commit changes
      shell: bash
      run: |
        git add package.json CHANGELOG.md
        git commit -m "Bump version to ${{ steps.bump.outputs.new-version }}"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ steps.generate-github-token.outputs.token }}

    - name: Push latest version
      shell: bash
      run: git push origin main

    - name: Push tags
      shell: bash
      run: git push origin --tags