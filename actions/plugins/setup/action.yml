name: Plugins - Setup
description: Sets up the environment for building and testing the plugin.

inputs:
  go-version:
    description: Go version to use.
    required: true
  node-version:
    description: Node.js version to use.
    required: true
  golangci-lint-version:
    description: golangci-lint version to use.
    required: true
  go-setup-caching:
    description: Defines if setup-go action should have caching enabled (https://github.com/actions/setup-go#caching-dependency-files-and-build-outputs)
    required: false
    default: "true"
  node-version-file:
    description: Node.js version file to use.
    required: false
    default: ""
  node-cache:
    description: Used to specify a package manager for caching in the default directory. Supported values npm, yarn, pnpm (https://github.com/actions/setup-node#caching-global-packages-data)
    required: false
    default: ""
  node-cache-dependency-path:
    description: Used to specify the path to a dependency file - package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies (https://github.com/actions/setup-node#caching-global-packages-data)
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Node
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: "${{ inputs.node-version }}"
        node-version-file: "${{ inputs.node-version-file }}"
        cache: "${{ inputs.node-cache }}"
        cache-dependency-path: "${{ inputs.node-cache-dependency-path }}"

    - name: Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: "${{ inputs.go-version }}"
        cache: "${{ inputs.go-setup-caching }}"

    - name: Mage
      shell: bash
      run: |
        go install github.com/magefile/mage@latest

    - name: golangci-lint
      shell: bash
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCI_LINT_VERSION}
      env:
        GOLANGCI_LINT_VERSION: ${{ inputs.golangci-lint-version }}
