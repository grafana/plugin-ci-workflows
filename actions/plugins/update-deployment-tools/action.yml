name: Update Deployment Tools
description: |
  Updates the version of a plugin in deployment_tools libsonnet files.
  This action can update a single environment or all environments at once.
  It will modify the version string in the specified libsonnet files and create a commit with the changes.

inputs:
  version:
    description: "Plugin version to update deployment_tools to in the format 1.0.0"
    required: true
    type: string
  env:
    description: "Environment to update"
    required: true
    type: choice
    options:
      - dev
      - staging
      - prod-canary
      - prod
      - all
  plugin_id:
    description: "ID of the plugin to update (e.g., grafana-plugin-app) this much match the filename of the dev/staging/prod libsonnet files in deployment_tools"
    required: true
    type: string

env:
  DEV_LIBSONNET_PATH: ksonnet/environments/hosted-grafana/waves/provisioned-plugins/${{ inputs.plugin_id }}/dev.libsonnet
  STAGING_LIBSONNET_PATH: ksonnet/environments/hosted-grafana/waves/provisioned-plugins/${{ inputs.plugin_id }}/staging.libsonnet
  PROD_CANARY_LIBSONNET_PATH: ksonnet/environments/hosted-grafana/waves/provisioned-plugins/${{ inputs.plugin_id }}/prod-canary.libsonnet
  PROD_LIBSONNET_PATH: ksonnet/environments/hosted-grafana/waves/provisioned-plugins/${{ inputs.plugin_id }}/prod.libsonnet

runs:
  using: composite
  steps:
    # Get required secrets from Vault
    - name: Get secrets from Vault
      id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@main # zizmor: ignore[unpinned-uses]
      env:
        VAULT_INSTANCE: ops
      with:
        vault_instance: ${{ env.VAULT_INSTANCE }}
        common_secrets: |
          GITHUB_APP_ID=plugins-platform-bot-app:app-id
          GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:private-key

    # Generate GitHub token for authentication
    - name: Generate GitHub token
      id: generate-github-token
      uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
      with:
        app-id: ${{ env.GITHUB_APP_ID }}
        private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    # Checkout the deployment_tools repository
    - name: Check out deployment_tools repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: grafana/deployment_tools
        ref: 'master'
        token: ${{ steps.generate-github-token.token }}

    # Map the selected environment to the corresponding libsonnet path(s)
    - name: Map environment to libsonnet path
      id: libsonnet-file
      run: |
        if [ "${{ inputs.env }}" = "all" ]; then
          # Create comma-separated string of all paths
          paths="${{ env.DEV_LIBSONNET_PATH }},${{ env.STAGING_LIBSONNET_PATH }},${{ env.PROD_CANARY_LIBSONNET_PATH }},${{ env.PROD_LIBSONNET_PATH }}"
          echo "paths=$paths" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.env }}" = "dev" ]; then
          echo "path=${{ env.DEV_LIBSONNET_PATH }}" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.env }}" = "staging" ]; then
          echo "path=${{ env.STAGING_LIBSONNET_PATH }}" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.env }}" = "prod-canary" ]; then
          echo "path=${{ env.PROD_CANARY_LIBSONNET_PATH }}" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.env }}" = "prod" ]; then
          echo "path=${{ env.PROD_LIBSONNET_PATH }}" >> $GITHUB_OUTPUT
        fi

    # Update version in the libsonnet file(s)
    - name: Update libsonnet
      run: |
        # Update all environments
        if [ "${{ inputs.env }}" = "all" ]; then
          # Split the comma-separated paths into an array
          IFS=',' read -ra paths <<< "${{ steps.libsonnet-file.outputs.paths }}"
          for path in "${paths[@]}"; do
            echo "Updating $path"
            count=$(grep -c "version: '.*'," "$path")
            if [ "$count" -eq 1 ]; then
              sed -i "s/version: '.*',/version: '${{ inputs.version }}',/" "$path"
              git add "$path"
            else
              echo "Not making any changes to $path;"
              exit 1
            fi
          done
        else
          # Update single environment for _catalog_version this will need to change
          path="${{ steps.libsonnet-file.outputs.path }}"
          echo "Updating $path"
          count=$(grep -c "version: '.*'," "$path")
          if [ "$count" -eq 1 ]; then
            sed -i "s/version: '.*',/version: '${{ inputs.version }}',/" "$path"
            git add "$path"
          else
            echo "Not making any changes to $path;"
            exit 1
          fi
        fi

    # Commit the changes
    - name: Commit update
      id: commit-update
      uses: grafana/github-api-commit-action@ccf9b520c5698380ad3b9619c5add427369b7ef1 #v0.2.0
      with:
        token: ${{ steps.generate-github-token.outputs.token }}
        commit-message: 'chore: update ${{ inputs.plugin_id }} version in ${{ inputs.env }} to [${{ inputs.version }}] [BOT]'
        use-checkout-repo: true