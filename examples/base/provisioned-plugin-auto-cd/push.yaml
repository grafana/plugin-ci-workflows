# Example for using the shared workflows for plugins provided by plugin-ci-workflows in a provisioned plugin, CD-style.
# All inputs are documented in the workflow files themselves:
# https://github.com/grafana/plugin-ci-workflows/tree/main/.github/workflows
# Additional documentation is also available on EngHub, here:
# https://enghub.grafana-ops.net/docs/default/component/grafana-plugins-platform/plugins-ci-github-actions/010-plugins-ci-github-actions/#customizing-the-workflows-with-inputs

name: Plugins - CI / CD

on:
  push:
    branches:
      - main
  pull_request:

permissions: {}

jobs:
  cd:
    name: CI / CD
    uses: grafana/plugin-ci-workflows/.github/workflows/cd.yml@main # zizmor: ignore[unpinned-uses]
    permissions:
      contents: write
      id-token: write
      attestations: write
    with:
      # Checkout/build PR or main branch, depending on event
      branch: ${{ github.event_name == 'push' && github.ref_name || github.ref }}

      # When pushing to "main", publish and deploy to Grafana Cloud (CD).
      # For PRs, skip publishing and deploying (run CI only).
      environment: ${{ (github.event_name == 'push' && github.ref_name == 'main') && env.CD_ENVIRONMENT || 'none' }}
      scopes: grafana_cloud # TODO: Choose the appropriate scope for your plugin.

      # This will trigger the Argo Workflow to update your plugin version in Grafana Cloud via deployment_tools
      grafana-cloud-deployment-type: provisioned
      argo-workflow-slack-channel: "#grafana-plugins-platform-ci" # TODO: Change with your own Slack channel
      # Grafana Cloud environment to deploy the provisioned plugin to.
      # - 'dev': dev
      # - 'ops': ops
      # - 'prod': dev + ops + prod
      # Can also be a comma-separated list of environments, e.g. 'dev,ops'.
      # Change to 'dev,ops' to deploy each push to main to both dev and ops environments.
      # Auto-merge all PRs in deployment_tools
      auto-merge-environments: dev

      # Add the git head ref sha to the plugin version as suffix (`+abcdef`). This is required for CD builds.
      plugin-version-suffix: ${{ github.event_name == 'push' && github.sha || github.event.pull_request.head.sha }}

      # TODO: add here any other CI custom inputs you may need. You most likely also have to add the same options to publish.yaml:
      #   https://enghub.grafana-ops.net/docs/default/component/grafana-plugins-platform/plugins-ci-github-actions/010-plugins-ci-github-actions/#customizing-the-workflows-with-inputs
